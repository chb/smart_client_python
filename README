SMART Python Client Library

To generate this README:

  $ python generate_readme.py > README

---


class SMARTClient(oauth2.Client)
 |  Establishes OAuth communication with an SMART Container, and provides access to the API.
 |  
 |  Method resolution order:
 |      SMARTClient
 |      oauth2.Client
 |      oauth2.httplib2.Http
 |      __builtin__.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, api_base, consumer_params, resource_token=None, **state_vars)
 |  
 |  absolute_uri(self, uri)
 |  
 |  accounts_X_apps_X_preferences_DELETE = c(self, *args, **kwargs)
 |      DELETE /accounts/{user_id}/apps/{smart_app_id}/preferences
 |      
 |      Delete user preferences for an app
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#UserPreferences
 |  
 |  accounts_X_apps_X_preferences_GET = c(self, *args, **kwargs)
 |      GET /accounts/{user_id}/apps/{smart_app_id}/preferences
 |      
 |      Get user preferences for an app
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#UserPreferences
 |  
 |  accounts_X_apps_X_preferences_PUT = c(self, *args, **kwargs)
 |      PUT /accounts/{user_id}/apps/{smart_app_id}/preferences
 |      
 |      Set new user preferences for an app
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#UserPreferences
 |  
 |  apps_X_manifest_GET = c(self, *args, **kwargs)
 |      GET /apps/{descriptor}/manifest
 |      
 |      Returns a JSON SMART UI app manifest for the app matching {descriptor}, or 404.  Note that {descriptor} can be an app ID like "got-statins@apps.smartplatforms.org" or an intent string like "view_medications".
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#AppManifest
 |  
 |  apps_manifests_GET = c(self, *args, **kwargs)
 |      GET /apps/manifests/
 |      
 |      Returns a JSON list of all SMART UI app manifests installed on the container.
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#AppManifest
 |  
 |  capabilities_GET = c(self, *args, **kwargs)
 |      GET /capabilities/
 |      
 |      Get capabilities for a container
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Capabilities
 |  
 |  delete(self, uri, headers={}, **uri_params)
 |      Make an OAuth-signed DELETE request to SMART Server.
 |  
 |  exchange_token(self, verifier)
 |      Exchange the client's current token (should be a request token) for an access token.
 |  
 |  fetch_request_token(self, params={})
 |      Get a request token from the server.
 |  
 |  get(self, uri, body={}, headers={'Authorization': u'OAuth realm="http://localhost:7000", oauth_bod...oauth_signature="TRgp1xeqxufQBAsUGBK0ow2qZCE%3D"'}, **uri_params)
 |      Make an OAuth-signed GET request to SMART Server.
 |  
 |  get_surl_credentials(self)
 |      Produces a token and secret for signing URLs.
 |  
 |  ontology_GET = c(self, *args, **kwargs)
 |      GET /ontology
 |      
 |      Get the ontology used by a SMART container
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Ontology
 |  
 |  post(self, uri, body='', headers={}, content_type=None, **uri_params)
 |      Make an OAuth-signed POST request to SMART Server.
 |  
 |  put(self, uri, body='', headers={}, content_type=None, **uri_params)
 |      Make an OAuth-signed PUT request to SMART Server.
 |  
 |  records_POST = c(self, *args, **kwargs)
 |      POST /records/
 |      
 |      Create a new medical record from the supplied graph
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#MedicalRecord
 |  
 |  records_X_alerts_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/alerts/
 |      
 |      Post new Alert for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Alert
 |  
 |  records_X_allergies_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/allergies/
 |      
 |      Get all allergies for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Allergy
 |  
 |  records_X_allergies_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/allergies/
 |      
 |      Post allergies for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Allergy
 |  
 |  records_X_allergies_X_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/allergies/{allergy_id}
 |      
 |      Get allergies for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Allergy
 |  
 |  records_X_demographics_DELETE = c(self, *args, **kwargs)
 |      DELETE /records/{record_id}/demographics
 |      
 |      Delete demographics for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Demographics
 |  
 |  records_X_demographics_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/demographics
 |      
 |      Get all demographics for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Demographics
 |  
 |  records_X_demographics_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/demographics
 |      
 |      Add to demographics for a patient with a newly-supplied graph
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Demographics
 |  
 |  records_X_encounters_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/encounters/
 |      
 |      Get all encounters for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Encounter
 |  
 |  records_X_encounters_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/encounters/
 |      
 |      Post encounters for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Encounter
 |  
 |  records_X_encounters_X_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/encounters/{encounter_id}
 |      
 |      Get encounters for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Encounter
 |  
 |  records_X_fulfillments_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/fulfillments/
 |      
 |      Get all fulfillments for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Fulfillment
 |  
 |  records_X_fulfillments_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/fulfillments/
 |      
 |      Post fulfillments for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Fulfillment
 |  
 |  records_X_fulfillments_X_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/fulfillments/{fulfillment_id}
 |      
 |      Get fulfillments for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Fulfillment
 |  
 |  records_X_immunizations_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/immunizations/
 |      
 |      Get all immunizations for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Immunization
 |  
 |  records_X_immunizations_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/immunizations/
 |      
 |      Post one immunization for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Immunization
 |  
 |  records_X_immunizations_X_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/immunizations/{immunization_id}
 |      
 |      Get one immunization for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Immunization
 |  
 |  records_X_lab_results_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/lab_results/
 |      
 |      Get all lab results for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#LabResult
 |  
 |  records_X_lab_results_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/lab_results/
 |      
 |      Post lab results for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#LabResult
 |  
 |  records_X_lab_results_X_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/lab_results/{lab_result_id}
 |      
 |      Get lab results for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#LabResult
 |  
 |  records_X_medications_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/medications/
 |      
 |      Get all medications for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Medication
 |  
 |  records_X_medications_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/medications/
 |      
 |      Post new medication for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Medication
 |  
 |  records_X_medications_X_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/medications/{medication_id}
 |      
 |      Get medication for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Medication
 |  
 |  records_X_problems_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/problems/
 |      
 |      Get all problems for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Problem
 |  
 |  records_X_problems_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/problems/
 |      
 |      Post problems for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Problem
 |  
 |  records_X_problems_X_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/problems/{problem_id}
 |      
 |      Get problems for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Problem
 |  
 |  records_X_vital_signs_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/vital_signs/
 |      
 |      Get all vital signs for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#VitalSigns
 |  
 |  records_X_vital_signs_POST = c(self, *args, **kwargs)
 |      POST /records/{record_id}/vital_signs/
 |      
 |      Post vital signs for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#VitalSigns
 |  
 |  records_X_vital_signs_X_GET = c(self, *args, **kwargs)
 |      GET /records/{record_id}/vital_signs/{vital_signs_id}
 |      
 |      Get vital signs for a patient
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#VitalSigns
 |  
 |  records_search_GET = c(self, *args, **kwargs)
 |      GET /records/search?given_name={given_name}&family_name={family_name}&zipcode={zipcode}&birthday={birthday}&gender={gender}&medical_record_number={medical_record_number}
 |      
 |      Get an RDF graph of sp:Demographics elements for all patients that match the query.  Matching treats family_name and given_name as the *beginning* of a name.  For instance given_name='J' matches /^J/i and thus matchs 'Josh'. Birthday is an ISO8601 string like "2008-03-21"; gender is "male" or "female".  Gender, birthday, zipcode, and medical_record_number must match exactly.
 |              
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#Demographics
 |  
 |  request(self, uri, uri_params, *args, **kwargs)
 |  
 |  update_token(self, resource_token)
 |      Update the resource token used by the client to sign requests.
 |  
 |  users_X_GET = c(self, *args, **kwargs)
 |      GET /users/{user_id}
 |      
 |      Get a single user by internal ID
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#User
 |  
 |  users_search_GET = c(self, *args, **kwargs)
 |      GET /users/search?given_name={given_name}&family_name={family_name}
 |      
 |      Get users by name (or all users if blank)
 |      
 |      Returns RDF Graph containing:  http://smartplatforms.org/terms#User
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  auth_redirect_url
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  ontology_file = '<?xml version="1.0"?>\n\n\n<!DOCTYPE rdf:RDF [\n    ....
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from oauth2.Client:
 |  
 |  set_signature_method(self, method)
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from oauth2.httplib2.Http:
 |  
 |  add_certificate(self, key, cert, domain)
 |      Add a key and cert that will be used
 |      any time a request requires authentication.
 |  
 |  add_credentials(self, name, password, domain='')
 |      Add a name and password that will be used
 |      any time a request requires authentication.
 |  
 |  clear_credentials(self)
 |      Remove all the names and passwords
 |      that are used for authentication
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from oauth2.httplib2.Http:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)

